import api from '../api/episodes'

export const GET_GENERAL_EPISODES = 'GET_GENERAL_EPISODES';
export const GET_FAVOURITE_EPISODES = 'GET_FAVOURITE_EPISODES';
export const REMOVE_FAVOURITE_EPISODES = 'REMOVE_FAVOURITE_EPISODES';


export function getGeneralEpisodesRequest() {
    return {
        type: GET_GENERAL_EPISODES
    }
}

export function getGeneralEpisodesSuccess(message) {
    return {
        type: GET_GENERAL_EPISODES,
        status: 'success',
        message: message
    }
}

export function getGeneralEpisodesFailure(error) {
    return {
        type: GET_GENERAL_EPISODES,
        status: 'error',
        error: error
    }
}

export function getFavouriteEpisodesRequest() {
    return {
        type: GET_FAVOURITE_EPISODES
    }
}

export function getFavouriteEpisodesSuccess(message) {
    return {
        type: GET_FAVOURITE_EPISODES,
        status: 'success',
        message: message
    }
}

export function getFavouriteEpisodesFailure(error) {
    return {
        type: GET_FAVOURITE_EPISODES,
        status: 'error',
        error: error
    }
}

export function removeFavouriteEpisodesFromStore(){return{
        type: REMOVE_FAVOURITE_EPISODES
    }
}

export function getEpisodes(numberOfEpisodes , fromEpisode , isSubscribed) {
    return dispatch => {

        if (isSubscribed){
            dispatch(getFavouriteEpisodesRequest());
            api.getEpisodes(numberOfEpisodes , fromEpisode , isSubscribed)
                .then(episodes => dispatch(getFavouriteEpisodesSuccess(episodes)))
                .catch(error => dispatch(getFavouriteEpisodesFailure(error)))

        } else {
            dispatch(getGeneralEpisodesRequest());
            api.getEpisodes(numberOfEpisodes , fromEpisode , isSubscribed)
                .then(episodes => dispatch(getGeneralEpisodesSuccess(episodes)))
                .catch(error => dispatch(getGeneralEpisodesFailure(error)))
        }
    }
}