import {
  FETCH_TOKENS,
  FETCH_SUBSCRIPTIONS,
  SUBSCRIBE,
  UNSUBSCRIBE
} from 'actions/subscriptions';

const DEFAULT_STATE = {
  tokens: [],
  isLoading: false,
  numberOfInvalid: 0,
};

export default function subscriptions(state = DEFAULT_STATE, action) {
  const { type, status, data, error, tokenId } = action;
  switch (type) {
    case FETCH_TOKENS:
      if (!status) {
        return { ...state, isLoading: true };
      }

      if (status === 'success') {
        return { tokens: data, isLoading: false, numberOfInvalid: 0 };
      }

      if (status === 'error') {
        return { ...state, error: error, isLoading: false, numberOfInvalid: 0 };
      }

    case SUBSCRIBE:
      if (!status) {
        // it's hack
        state.tokens.find(token => token.id === tokenId).subscribed = true;
        return { ...state, numberOfInvalid: state.numberOfInvalid + 1 };
      }

      if (status === 'success') {
        return { ...state, numberOfInvalid: state.numberOfInvalid - 1 };
      }

      if (status === 'error') {
        return { ...state, error: error };
      }

    case UNSUBSCRIBE:
      if (!status) {
        // it's hack
        state.tokens.find(token => token.id === tokenId).subscribed = false;
        return { ...state, numberOfInvalid: state.numberOfInvalid + 1 };
      }

      if (status === 'success') {
        return { ...state, numberOfInvalid: state.numberOfInvalid - 1 };
      }

      if (status === 'error') {
        return { ...state, error: error };
      }

    default:
      return state;
  }
};
