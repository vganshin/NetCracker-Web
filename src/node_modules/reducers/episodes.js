import {
  ADD_NEW_EPISODE,
  GET_GENERAL_EPISODES,
  GET_FAVOURITE_EPISODES,
  REMOVE_FAVOURITE_EPISODES
} from '../actions/episodesActions';

const DEFAULT_STATE = {
  isLoading: false,
  favouriteEpisodes: [],
  generalEpisodes: [],
};

export default function episodes(state = DEFAULT_STATE, action) {
  const {type, status, message, error, episode} = action;
  switch (type){
    case ADD_NEW_EPISODE:
      return { ...state, generalEpisodes: [episode, ...state.generalEpisodes]};

    case GET_GENERAL_EPISODES:
      if (!status) {
        return { ...state, isLoading: true};
      }

      if (status === 'success') {
        return { ...state, generalEpisodes: [...state.generalEpisodes, ...message], isLoading: false};
      } else {
        return { ...state, error: error, isLoading: false };
      }

    case GET_FAVOURITE_EPISODES:
      if (!status) {
        return { ...state, isLoading: true};
      }

      if (status === 'success') {
        return { ...state, favouriteEpisodes: [...state.favouriteEpisodes, ...message], isLoading: false};
      } else {
        return { ...state, error: error, isLoading: false};
      }

    case REMOVE_FAVOURITE_EPISODES:
      return { ...state, favouriteEpisodes: [] };

    default: return state;
  }
};
